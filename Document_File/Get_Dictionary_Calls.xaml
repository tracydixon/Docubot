<Activity mc:Ignorable="sap sap2010" x:Class="Get_Dictionary_Calls" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" 	
xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 	
xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" 	
xmlns:s="clr-namespace:System;assembly=mscorlib" 	
xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" 	
xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" 	
xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" 	
xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" 	
xmlns:sd="clr-namespace:System.Data;assembly=System.Data" 	
xmlns:ui="http://schemas.uipath.com/workflow/activities" 	
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_text" Type="InArgument(x:String)" />
    <x:Property Name="io_workflowRow" Type="InOutArgument(sd:DataRow)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1056,2130.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Get_Dictionary_Calls_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Get_Dictionary_Calls" sap:VirtualizedContainerService.HintSize="1066.4,2065.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="argumentsArray" />
      <Variable x:TypeArguments="x:String" Name="callString" />
      <Variable x:TypeArguments="x:String" Name="dictionaryName" />
      <Variable x:TypeArguments="x:String" Name="argumentsString" />
      <Variable x:TypeArguments="x:String" Name="variablesString" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(of String)]" Name="argumentsList" />
      <Variable x:TypeArguments="s:String[]" Name="variablesArray" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(of String)]" Name="variablesList" />
      <Variable x:TypeArguments="x:Int32" Name="stringPosition" />
      <Variable x:TypeArguments="x:Boolean" Name="inList" />
      <Variable x:TypeArguments="x:Int32" Name="endPosition" />
      <Variable x:TypeArguments="x:Int32" Name="nextPosition" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Parallel DisplayName="Review arguments and variables" sap:VirtualizedContainerService.HintSize="1024.8,1972.8" sap2010:WorkflowViewState.IdRef="Parallel_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Example:&#xD;&#xA;&#xD;&#xA;&lt;x:Property Name=&quot;in_config&quot; Type=&quot;InArgument(scg:Dictionary(x:String, x:Object))&quot; /&gt;" DisplayName="Review arguments" sap:VirtualizedContainerService.HintSize="200,1926.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign argument row" sap:VirtualizedContainerService.HintSize="696,60" sap2010:WorkflowViewState.IdRef="Assign_9">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[argumentsString]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Strings.Replace(io_workflowRow("Arguments").ToString, "Arguments" + vbNewLine, "")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign argument array" sap:VirtualizedContainerService.HintSize="696,60" sap2010:WorkflowViewState.IdRef="Assign_11">
          <Assign.To>
            <OutArgument x:TypeArguments="s:String[]">[argumentsArray]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:String[]">[argumentsString.Split(CChar(vbNewLine))]</InArgument>
          </Assign.Value>
        </Assign>
        <ParallelForEach x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Example:&#xD;&#xA;&lt;x:Property Name=&quot;in_config&quot; Type=&quot;InArgument(scg:Dictionary(x:String, x:Object))&quot; /&gt;" DisplayName="Review all arguments" sap:VirtualizedContainerService.HintSize="696,1637.6" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_2" Values="[argumentsArray]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="currentArgument" />
            </ActivityAction.Argument>
            <If Condition="[Instr(currentArgument, &quot;Dictionary&quot;) &gt; 0]" DisplayName="Review dictionary arguments" sap:VirtualizedContainerService.HintSize="646.4,1444.8" sap2010:WorkflowViewState.IdRef="If_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Get position of dictionary call" sap:VirtualizedContainerService.HintSize="611.2,1256" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign first position" sap:VirtualizedContainerService.HintSize="569.6,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[stringPosition]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[Instr(in_text, currentArgument)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign dictionary name" sap:VirtualizedContainerService.HintSize="569.6,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dictionaryName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[left(currentArgument, Instr(currentArgument,",") - 1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <While DisplayName="Gather all dictionary calls" sap:VirtualizedContainerService.HintSize="569.6,963.2" sap2010:WorkflowViewState.IdRef="While_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <While.Condition>[stringPosition &gt; 0]</While.Condition>
                    <Sequence DisplayName="Get next dictionary call" sap:VirtualizedContainerService.HintSize="524.8,804" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign next position" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[nextPosition]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[Instr(stringPosition + 1, in_text, currentArgument)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Increment position" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[stringPosition]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[nextPosition]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign end position" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[endPosition]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[Instr(nextPosition + 1, in_text, ")")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign dictionary call to seek" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[callString]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[mid(in_text, stringPosition, endPosition - stringPosition)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ExistsInCollection x:TypeArguments="x:String" Collection="[argumentsList]" DisplayName="In list?" sap:VirtualizedContainerService.HintSize="483.2,22.4" sap2010:WorkflowViewState.IdRef="ExistsInCollection`1_2" Item="[callString]" Result="[inList]" />
                      <If Condition="[inList = FALSE]" DisplayName="Add dictionary call to  list" sap:VirtualizedContainerService.HintSize="483.2,248.8" sap2010:WorkflowViewState.IdRef="If_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <AddToCollection x:TypeArguments="x:String" Collection="[argumentsList]" DisplayName="Add unique call to list" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[currentArgument]" />
                        </If.Then>
                      </If>
                    </Sequence>
                  </While>
                </Sequence>
              </If.Then>
            </If>
          </ActivityAction>
        </ParallelForEach>
        <Assign DisplayName="Assign argument header" sap:VirtualizedContainerService.HintSize="696,60" sap2010:WorkflowViewState.IdRef="Assign_41">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[io_workflowRow("Dictionary_Keys")]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">["Dictionary Keys" + vbNewLine]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[argumentsList.Count &gt; 0]" DisplayName="Sort and output list" sap:VirtualizedContainerService.HintSize="548,336.8" sap2010:WorkflowViewState.IdRef="If_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence DisplayName="Sort and output list" sap:VirtualizedContainerService.HintSize="241.6,177.6" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="variablesList.Sort" DisplayName="Sort argument list" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="variablesList">[variablesList]</InOutArgument>
                </ui:InvokeCode.Arguments>
              </ui:InvokeCode>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Output all arguments" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[argumentsList]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="arg" />
                    </ActivityAction.Argument>
                    <Assign DisplayName="Add each argument" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_workflowRow("Arg_Dictionary_Calls")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[io_workflowRow("Arg_Dictionary_Calls").ToString + arg + vbNewLine]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Add each argument" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_40">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[io_workflowRow("Dictionary_References")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[io_workflowRow("Dictionary_References").ToString + "n/a" + vbNewLine]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Example:&#xD;&#xA;&#xD;&#xA;&lt;Variable x:TypeArguments=&quot;scg:Dictionary(x:String, x:Object)&quot; Name=&quot;config&quot; /&gt;" DisplayName="Review variables" sap:VirtualizedContainerService.HintSize="651.2,1926.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign variable row info" sap:VirtualizedContainerService.HintSize="609.6,60" sap2010:WorkflowViewState.IdRef="Assign_18">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[variablesString]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Strings.Replace(io_workflowRow("Variables").ToString, "Arguments" + vbNewLine, "")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign variable array" sap:VirtualizedContainerService.HintSize="609.6,60" sap2010:WorkflowViewState.IdRef="Assign_20">
          <Assign.To>
            <OutArgument x:TypeArguments="s:String[]">[variablesArray]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:String[]">[variablesString.Split(CChar(vbNewLine))]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign variable header" sap:VirtualizedContainerService.HintSize="609.6,60" sap2010:WorkflowViewState.IdRef="Assign_42">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[io_workflowRow("Var_Dictionary_Calls")]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">["Variable Dictionary References" + vbNewLine]</InArgument>
          </Assign.Value>
        </Assign>
        <ParallelForEach x:TypeArguments="x:String" DisplayName="Review all variables" sap:VirtualizedContainerService.HintSize="609.6,1411.2" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_3" Values="[variablesArray]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="currentVariable" />
            </ActivityAction.Argument>
            <If Condition="[Instr(currentVariable, &quot;Dictionary&quot;) &gt; 0]" DisplayName="Review dictionary variables" sap:VirtualizedContainerService.HintSize="560,1262.4" sap2010:WorkflowViewState.IdRef="If_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Get position of dictionary call" sap:VirtualizedContainerService.HintSize="524.8,1073.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap2010:Annotation.AnnotationText="Get position that variable begins in the dictionary line." DisplayName="Assign first position" sap:VirtualizedContainerService.HintSize="483.2,104" sap2010:WorkflowViewState.IdRef="Assign_21">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[stringPosition]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[Instr(in_text, currentVariable)]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign DisplayName="Assign dictionary name" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dictionaryName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[left(currentVariable, Instr(currentVariable,",") - 1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <While DisplayName="Gather all dictionary calls" sap:VirtualizedContainerService.HintSize="483.2,736.8" sap2010:WorkflowViewState.IdRef="While_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <While.Condition>
                      <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="stringPosition &gt; 0" />
                    </While.Condition>
                    <Sequence DisplayName="Get next dictionary call" sap:VirtualizedContainerService.HintSize="304,577.6" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="blInList" />
                        <Variable x:TypeArguments="x:Int32" Name="intEndPosition" />
                        <Variable x:TypeArguments="x:Int32" Name="intNextPosition" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign next position" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[nextPosition]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[Instr(stringPosition + 1, in_text, currentVariable)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Increment position" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[stringPosition]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[nextPosition]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign end position" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[endPosition]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[Instr(nextPosition + 1, in_text, ")")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign dictionary call to seek" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[callString]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[mid(in_text, stringPosition, endPosition - stringPosition)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ExistsInCollection x:TypeArguments="x:String" Collection="[argumentsList]" DisplayName="In list?" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="ExistsInCollection`1_3" Item="[callString]" Result="[blInList]" />
                      <If Condition="[blInList = FALSE]" DisplayName="Add dictionary call to  list" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="If_5">
                        <If.Then>
                          <AddToCollection x:TypeArguments="x:String" Collection="[variablesList]" DisplayName="Add unique call to list" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[currentVariable]" />
                        </If.Then>
                      </If>
                    </Sequence>
                  </While>
                </Sequence>
              </If.Then>
            </If>
          </ActivityAction>
        </ParallelForEach>
        <If Condition="[variablesList.Count &gt; 0]" DisplayName="Sort and output list" sap:VirtualizedContainerService.HintSize="609.6,22.4" sap2010:WorkflowViewState.IdRef="If_10">
          <If.Then>
            <Sequence DisplayName="Sort and output" sap:VirtualizedContainerService.HintSize="475.2,340" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="variablesList.Sort" DisplayName="Sort variable list" sap:VirtualizedContainerService.HintSize="433.6,22.4" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="variablesList">[variablesList]</InOutArgument>
                </ui:InvokeCode.Arguments>
              </ui:InvokeCode>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Output all variables" sap:VirtualizedContainerService.HintSize="433.6,184.8" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[variablesList]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="var" />
                    </ActivityAction.Argument>
                    <Assign DisplayName="Add each variable" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_workflowRow("Var_Dictionary_Calls")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[io_workflowRow("Var_Dictionary_Calls").ToString + var + vbNewLine]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
            </Sequence>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Add n/a variables" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_37">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[io_workflowRow("Var_Dictionary_Calls")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[io_workflowRow("Var_Dictionary_Calls").ToString + "n/a" + vbNewLine]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
      </Sequence>
    </Parallel>
  </Sequence>
</Activity>