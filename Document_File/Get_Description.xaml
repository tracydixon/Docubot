<Activity mc:Ignorable="sap sap2010 sads" x:Class="Get_Description"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 	
xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 	
xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 	
xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 	
xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 	
xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 	
xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 	
xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 	
xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 	
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_workflow" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="out_description" Type="OutArgument(x:String)" />
    <x:Property Name="in_text" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Get_Description_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Get_Description" sap2010:WorkflowViewState.IdRef="Sequence_36">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="intDescriptionStart" />
      <Variable x:TypeArguments="x:Int32" Name="intDescriptionEnd" />
    </Sequence.Variables>
    <Assign DisplayName="Assign description start" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[intDescriptionStart]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[Instr(in_text, "sap2010:Annotation.AnnotationText=""Description") + 46]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign description end" sap2010:WorkflowViewState.IdRef="Assign_100">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[intDescriptionEnd]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[Instr(intDescriptionStart+11, in_text,"&amp;#xA;")]</InArgument>
      </Assign.Value>
    </Assign>
    <If sap2010:Annotation.AnnotationText="Has the delimiters in the string expected for description." Condition="[intDescriptionStart &gt; 46 and intDescriptionEnd &gt; intDescriptionStart]" DisplayName="Get description" sap2010:WorkflowViewState.IdRef="If_44">
      <If.Then>
        <Assign DisplayName="Assign description" sap2010:WorkflowViewState.IdRef="Assign_97">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_description]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["Description" + vbNewLine + Mid(in_text, intDescriptionStart, 
intDescriptionEnd -  intDescriptionStart).Replace("&amp;#xA;","") + vbNewLine]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign DisplayName="Assign description" sap2010:WorkflowViewState.IdRef="Assign_98">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_description]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["Description" + vbNewLine + "n/a" + vbNewLine]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <Assign DisplayName="Add description" sap2010:WorkflowViewState.IdRef="Assign_99">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[io_workflow("Description")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[out_description]</InArgument>
      </Assign.Value>
    </Assign>
    <sads:DebugSymbol.Symbol>d1dDOlxVc2Vyc1x0ZGl4b25cU291cmNlXFJvYm90aWNQcm9jZXNzQXV0b21hdGlvblxlUmVmZXJyYWxzXERvY3Vib3RcR2V0X0Rlc2NyaXB0aW9uLnhhbWwRSAN9DgIBAU0FVA4CARdVBVwOAgETXQVzCgIBBnQFew4CAQJSL1J3AgEaTzBPRQIBGFovWmMCARZXMFdDAgEUXXJdwAECAQdfCWcSAgEPaglxEgIBC3kweUECAQR2MXZNAgEDYTVhRgIBEG80b18CAQ5sNWxGAgEM</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_100" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_97" sap:VirtualizedContainerService.HintSize="242,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_98" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_44" sap:VirtualizedContainerService.HintSize="509,239">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_99" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="531,663">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Get_Description_1" sap:VirtualizedContainerService.HintSize="571,743" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>