<Activity mc:Ignorable="sap sap2010 sads" x:Class="Get_Log"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 	
xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 	
xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 	
xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 	
xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 	
xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 	
xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 	
xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 	
xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 	
xmlns:ui="http://schemas.uipath.com/workflow/activities"
 	
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_workflow" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="in_text" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Get_Log_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description&#xD;&#xA;Determine whether there is a log start and log end message.&#xD;&#xA;&#xD;&#xA;Pre-Condition&#xD;&#xA;A file has been opened and the contents of the file passe&#xD;&#xA;&#xD;&#xA;Post-Condition&#xD;&#xA;The workflow record has been updated accordingly.&#xD;&#xA;&#xD;&#xA;Arguments&#xD;&#xA;io_workflow: the datarow for each workflow name being documented.&#xD;&#xA;in_text: the text of the workflow file&#xD;&#xA;out_logStart: flag for whether there is a log start message.&#xD;&#xA;out_logEnd: flag for whether there is a log end message.&#xD;&#xA;&#xD;&#xA;Calls&#xD;&#xA;n/a&#xD;&#xA;&#xD;&#xA;Called By&#xD;&#xA;Process_Folder" DisplayName="Private: Get_Logs" sap2010:WorkflowViewState.IdRef="Sequence_36">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="intLogStartBegin" />
      <Variable x:TypeArguments="x:Int32" Name="intLogEndBegin" />
      <Variable x:TypeArguments="x:Int32" Name="intLogStartFinish" />
      <Variable x:TypeArguments="x:Int32" Name="intLogEndFinish" />
      <Variable x:TypeArguments="x:Int32" Name="intLogStartRow" />
      <Variable x:TypeArguments="x:Int32" Name="intLogEndRow" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log start" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="Get_Logs started." />
    <Parallel DisplayName="Get log row positions" sap2010:WorkflowViewState.IdRef="Parallel_1">
      <Assign DisplayName="Assign log start begin position" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[intLogStartRow]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[Instr(in_text, "Log start")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign log end begin position" sap2010:WorkflowViewState.IdRef="Assign_100">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[intLogEndRow]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[Instr(in_text, "Log end")]</InArgument>
        </Assign.Value>
      </Assign>
    </Parallel>
    <Parallel DisplayName="Get log start positions" sap2010:WorkflowViewState.IdRef="Parallel_3">
      <If Condition="[intLogStartRow &gt; 0]" DisplayName="Assign log start begin position" sap2010:WorkflowViewState.IdRef="If_46">
        <If.Then>
          <Sequence DisplayName="Log start calculations" sap2010:WorkflowViewState.IdRef="Sequence_37">
            <Assign DisplayName="Assign log start begin position" sap2010:WorkflowViewState.IdRef="Assign_103">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[intLogStartBegin]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Instr(intLogStartRow + 1, in_text, "[&amp;quot;") + 7]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign log start finish position" sap2010:WorkflowViewState.IdRef="Assign_101">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[intLogStartFinish]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Instr(intLogStartBegin + 1, in_text, "&amp;quot;]")]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
      </If>
      <If Condition="[intLogEndRow &gt; 0]" DisplayName="Assign log end begin position" sap2010:WorkflowViewState.IdRef="If_47">
        <If.Then>
          <Sequence DisplayName="Log end calculations" sap2010:WorkflowViewState.IdRef="Sequence_38">
            <Assign DisplayName="Assign log end begin position" sap2010:WorkflowViewState.IdRef="Assign_104">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[intLogEndBegin]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Instr(intLogEndRow + 1, in_text, "[&amp;quot;") + 7]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign log end finish position" sap2010:WorkflowViewState.IdRef="Assign_102">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[intLogEndFinish]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[Instr(intLogEndBegin+1, in_text, "&amp;quot;]")]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
      </If>
    </Parallel>
    <Parallel DisplayName="Add log start and end to workflows" sap2010:WorkflowViewState.IdRef="Parallel_4">
      <If sap2010:Annotation.AnnotationText="Get log start entry" Condition="[intLogStartBegin &gt; 0 and intLogStartFinish &gt; intLogStartBegin]" DisplayName="Get log start entry" sap2010:WorkflowViewState.IdRef="If_44">
        <If.Then>
          <Assign DisplayName="Add log start" sap2010:WorkflowViewState.IdRef="Assign_99">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[io_workflow("Log_Start")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">["Log start entry" + vbNewLine + mid(in_text, intLogStartBegin, intLogStartFinish - intLogStartBegin) + vbNewLine]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Assign DisplayName="Add log start" sap2010:WorkflowViewState.IdRef="Assign_106">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[io_workflow("Log_Start")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">["Log start entry" + vbNewLine + "n/a" + vbNewLine]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
      <If sap2010:Annotation.AnnotationText="Get log end entry" Condition="[intLogEndBegin &gt; 0 and intLogEndFinish &gt; intLogEndBegin]" DisplayName="Get log end entry" sap2010:WorkflowViewState.IdRef="If_45">
        <If.Then>
          <Assign DisplayName="Add log end" sap2010:WorkflowViewState.IdRef="Assign_105">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[io_workflow("Log_End")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">["Log end entry" + vbNewLine + mid(in_text, intLogEndBegin, intLogEndFinish - intLogEndBegin) + vbNewLine]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Assign DisplayName="Add log end" sap2010:WorkflowViewState.IdRef="Assign_107">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[io_workflow("Log_End")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">["Log end entry" + vbNewLine + "n/a" + vbNewLine]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Else>
      </If>
    </Parallel>
    <ui:LogMessage DisplayName="Log end" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="Get_Logs ended." />
    <sads:DebugSymbol.Symbol>d1BDOlxVc2Vyc1x0ZGl4b25cU291cmNlXFJvYm90aWNQcm9jZXNzQXV0b21hdGlvblxlUmVmZXJyYWxzXERvY3Vib3RcR2V0X0xvZ3MueGFtbDBJA8MBDgIBAVIFUoYBAgE9UwVkEAIBNGUFkgEQAgEbkwEFwAEQAgEEwQEFwQGCAQIBAlJwUoMBAgE+VAdbEAIBOVwHYxACATVmB3sMAgEofAeRAQwCARyUAQepAQwCARCqAQe/AQwCAQXBAW7BAX8CAQNZMVlOAgE8VjJWQgIBOmExYUwCATheMl5AAgE2ZhVmLgIBKWgLeRYCASt8FXwsAgEdfguPARYCAR+UAU2UAZQBAgERlgELnQEUAgEYoAELpwEUAgEVqgFLqgGMAQIBBqwBC7MBFAIBDbYBC70BFAIBCmkNcBYCATBxDXgWAgEsfw2GARYCASSHAQ2OARYCASCbATabAaQBAgEamAE3mAFRAgEZpQE2pQFlAgEXogE3ogFRAgEWsQE2sQGcAQIBD64BN64BTwIBDrsBNrsBYwIBDLgBN7gBTwIBC243bm4CATNrOGtKAgExdjd2bAIBL3M4c0sCAS2EATeEAWwCASeBATiBAUgCASWMATeMAWgCASOJATiJAUkCASE=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="1082,91" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_100" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Parallel_1" sap:VirtualizedContainerService.HintSize="1082,106" />
      <sap2010:ViewStateData Id="Assign_103" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_101" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_46" sap:VirtualizedContainerService.HintSize="464,432" />
      <sap2010:ViewStateData Id="Assign_104" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_102" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_47" sap:VirtualizedContainerService.HintSize="464,432" />
      <sap2010:ViewStateData Id="Parallel_3" sap:VirtualizedContainerService.HintSize="1082,478" />
      <sap2010:ViewStateData Id="Assign_99" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_106" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_44" sap:VirtualizedContainerService.HintSize="200,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_105" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_107" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_45" sap:VirtualizedContainerService.HintSize="200,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Parallel_4" sap:VirtualizedContainerService.HintSize="1082,124" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="1082,91" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="1104,1486">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Get_Log_1" sap:VirtualizedContainerService.HintSize="1144,1566" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>