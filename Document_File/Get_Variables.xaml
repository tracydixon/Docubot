<Activity mc:Ignorable="sap sap2010" x:Class="Get_Variables" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" 	
xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 	
xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" 	
xmlns:s="clr-namespace:System;assembly=mscorlib" 	
xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" 	
xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" 	
xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" 	
xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" 	
xmlns:sd="clr-namespace:System.Data;assembly=System.Data" 	
xmlns:ui="http://schemas.uipath.com/workflow/activities" 	
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_workflowRow" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="in_line" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>660,972</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Get_Exceptions_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="Takes the full text of a XAML file and creates a list of exceptions from that text." DisplayName="Get_Variables" sap:VirtualizedContainerService.HintSize="387.2,907.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="variablesArray" />
      <Variable x:TypeArguments="x:String" Name="strVariableList" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(of String)]" Name="variablesList" />
      <Variable x:TypeArguments="x:Boolean" Name="blInList" />
      <Variable x:TypeArguments="x:String" Name="TROUBLESHOOTING_line" />
      <Variable x:TypeArguments="sd:DataRow" Name="TROUBLESHOOTING_row" />
      <Variable x:TypeArguments="x:Int32" Name="intIndex" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Get Variables" sap:VirtualizedContainerService.HintSize="345.6,708" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="TROUBLESHOOTING_line" sap:VirtualizedContainerService.HintSize="304,60" sap2010:WorkflowViewState.IdRef="Assign_31">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[TROUBLESHOOTING_line]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_line]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="TROUBLESHOOTING_row" sap:VirtualizedContainerService.HintSize="304,60" sap2010:WorkflowViewState.IdRef="Assign_32">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataRow">[TROUBLESHOOTING_row]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataRow">[io_workflowRow]</InArgument>
        </Assign.Value>
      </Assign>
      <Sequence DisplayName="Gather and split variables" sap:VirtualizedContainerService.HintSize="304,252.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Get list of variables" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_40">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strVariableList]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Trim(in_line.Replace("&lt;Variable x:TypeArguments=","").Replace(" Name=", ", ").Replace("scg:","").Replace("sd:","").Replace("sgc:","").Replace("s:","").Replace("x:", "").Replace("ui:", "").Replace("uico:", "").Replace("scg1:", "").Replace(" /&gt;","").Replace(chr(34),"").Replace(chr(9),""))]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Separate variables" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_41">
          <Assign.To>
            <OutArgument x:TypeArguments="s:String[]">[variablesArray]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:String[]">[strVariableList.Split(Cchar(vbNewLine))]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <Assign DisplayName="Add header" sap:VirtualizedContainerService.HintSize="304,60" sap2010:WorkflowViewState.IdRef="Assign_50">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[io_workflowRow("Variables")]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">["Variables" + vbNewLine]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[variablesArray.Length &gt; 0]" DisplayName="Add each variable to output" sap:VirtualizedContainerService.HintSize="304,22.4" sap2010:WorkflowViewState.IdRef="If_17">
        <If.Then>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Add each variable to output" sap:VirtualizedContainerService.HintSize="287,194" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[variablesArray]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                </ActivityAction.Argument>
                <If Condition="[len(item) &gt; 0]" DisplayName="Add each valid variable" sap:VirtualizedContainerService.HintSize="464,208" sap2010:WorkflowViewState.IdRef="If_21">
                  <If.Then>
                    <Sequence DisplayName="Add and log fields" sap:VirtualizedContainerService.HintSize="264,337" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Add a comma for default info" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[item]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[item.Replace(" Default=",", Default=")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ExistsInCollection x:TypeArguments="x:String" Collection="[variablesList]" DisplayName="Exists In Collection" sap:VirtualizedContainerService.HintSize="242,22" sap2010:WorkflowViewState.IdRef="ExistsInCollection`1_2" Item="[trim(item)]" Result="[blInList]" />
                      <If Condition="[blInList = False]" DisplayName="Add unique items to list" sap:VirtualizedContainerService.HintSize="464,208" sap2010:WorkflowViewState.IdRef="If_20">
                        <If.Then>
                          <AddToCollection x:TypeArguments="x:String" Collection="[variablesList]" DisplayName="Add to list" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[trim(item)]" />
                        </If.Then>
                      </If>
                    </Sequence>
                  </If.Then>
                </If>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Sort and output list" sap:VirtualizedContainerService.HintSize="345.6,22.4" sap2010:WorkflowViewState.IdRef="Sequence_12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeCode ContinueOnError="{x:Null}" Code="variablesList.Sort" DisplayName="Sort list" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
        <ui:InvokeCode.Arguments>
          <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="variablesList">[variablesList]</InOutArgument>
        </ui:InvokeCode.Arguments>
      </ui:InvokeCode>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Output list" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[variablesList]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="item" />
            </ActivityAction.Argument>
            <Assign DisplayName="Add each variable to output" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_48">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[io_workflowRow("Variables")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[io_workflowRow("Variables").ToString + item + vbNewLine]</InArgument>
              </Assign.Value>
            </Assign>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
  </Sequence>
</Activity>